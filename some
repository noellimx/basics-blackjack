diff --git a/scripts/domain/hand.js b/scripts/domain/hand.js
index da33ff0..335cdcb 100644
--- a/scripts/domain/hand.js
+++ b/scripts/domain/hand.js
@@ -52,13 +52,13 @@ class Hand {
     this._onSetBet = cb;
   };
 
-  signalActive = (isActive) => {
+  signalActive = (isActive, phase, player, round) => {
     if (isActive === null || isActive === undefined) {
       throw "Error! please send me signal.";
     }
-    this._onActiveSignal(isActive);
+    this._onActiveSignal(isActive, phase, player, round);
   };
-  _onActiveSignal = (phase) => {};
+  _onActiveSignal = (isActive, phase, player, round) => {};
   setOnActiveSignal = (cb) => (this._onActiveSignal = cb);
 }
 
diff --git a/scripts/domain/round.js b/scripts/domain/round.js
index 72a4992..f6b3b26 100644
--- a/scripts/domain/round.js
+++ b/scripts/domain/round.js
@@ -56,6 +56,7 @@ class Round {
 
     /** @private {Player} */
     this._currentPlayer = null;
+    /** @private {Hand} */
     this._currentHand = null;
 
     this._nextTurn = null;
@@ -339,23 +340,14 @@ class Round {
   getDealerHands = () => this._dealer.getHands();
 
   setCurrentHandAndPlayer = (hand, player) => {
-    const [prevPlayerId, prevHandId] = [
-      this.getCurrentPlayer()?.id(),
-      this.getCurrentHand()?.id(),
-    ];
-    this._currentHand = hand;
+    const prevPlayer = this.getCurrentPlayer();
+    const prevHand = this.getCurrentHand();
+
     this._currentPlayer = player;
-    const [nextPlayer, nextHand] = [
-      this.getCurrentPlayer()?.id(),
-      this.getCurrentHand()?.id(),
-    ];
-    this._onSetCurrentHand(
-      prevPlayerId,
-      prevHandId,
-      nextPlayer,
-      nextHand,
-      this._phase
-    );
+    
+    this._currentHand = hand;
+    prevHand.signalActive(false) 
+    this._currentHand.signalActive(false) 
   };
 
   _autoCreateHands = () => {
diff --git a/scripts/ui/hand.js b/scripts/ui/hand.js
index 663bd0c..b8f845b 100644
--- a/scripts/ui/hand.js
+++ b/scripts/ui/hand.js
@@ -40,9 +40,6 @@ class UiHand extends Ui_Component {
       }
     });
 
-    this._hand.setOnActiveSignal((phase) => {
-      this.replaceChildrenUi(this._uiCount, this._uiCardsHolder);
-    });
 
     // First Render
     this._refreshUiCardsCount();
